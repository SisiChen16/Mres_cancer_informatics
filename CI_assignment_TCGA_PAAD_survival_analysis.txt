## Description of aim: Using the existing TCGA data, identify a novel prognostic biomarker that associates with survival in any tumour type and provide evidence for the molecular mechanism that drives the difference in expression of that gene. 

## Codes are expected to run in Linux terminal as a mixture of Linux commands ($) and R codes  


#################################################################################### 
######################## Data download and import ################################## 

# Download RNAseq data 

$ wget https://tcga-xena-hub.s3.us-east-1.amazonaws.com/download/TCGA.PAAD.sampleMap%2FHiSeqV2.gz

$ mv TCGA.PAAD.sampleMap%2FHiSeqV2.gz  PAAD_HiSeqV2.gz
$ gunzip PAAD_HiSeqV2.gz
# Download DNA methylation data
$ wget https://tcga-xena-hub.s3.us-east-1.amazonaws.com/download/TCGA.PAAD.sampleMap%2FHumanMethylation450.gz

$ mv TCGA.PAAD.sampleMap%2FHumanMethylation450.gz PAAD_Methylation450.gz
$ gunzip PAAD_Methylation450.gz



# Download Curated Clinical Survival Data
$ wget https://tcga-xena-hub.s3.us-east-1.amazonaws.com/download/survival%2FPAAD_survival.txt$ mv survival%2FPAAD_survival.txt PAAD_survival.txt



# Download Clinical Data
$ wget https://tcga-xena-hub.s3.us-east-1.amazonaws.com/download/TCGA.PAAD.sampleMap%2FPAAD_clinicalMatrix

$ mv TCGA.PAAD.sampleMap%2FPAAD_clinicalMatrix PAAD_clinicalMatrix



# Download copy number gistic2 dataset 

$ wget https://tcga-xena-hub.s3.us-east-1.amazonaws.com/download/TCGA.PAAD.sampleMap%2FGistic2_CopyNumber_Gistic2_all_data_by_genes.gz

$ mv TCGA.PAAD.sampleMap%2FGistic2_CopyNumber_Gistic2_all_data_by_genes.gz TCGA.PAAD.CNV.gz 

$ gunzip TCGA.PAAD.CNV.gz 



# Download mutation data 
$ wget https://tcga-xena-hub.s3.us-east-1.amazonaws.com/download/mc3%2FPAAD_mc3.txt.gz

$ mv mc3%2FPAAD_mc3.txt.gz PAAD.mutation.txt.gz

$ gunzip PAAD.mutation.txt.gz



## Import data 

nice R

# read in RNAseq data
rna.data <- read.table("PAAD_HiSeqV2",sep="\t",head=TRUE,row.names=1)

dim(rna.data)

rna.data[1:3,1:3]
rna.data <- as.matrix(rna.data)

# read in survival data
surv.data <- read.table("PAAD_survival.txt", sep="\t", header=T, row.names=1) 
rownames(surv.data)<-gsub(rownames(surv.data), pattern="-", replace=".")
surv.data[1:3,]

# read in clinical data
clin.data <- read.table("PAAD_clinicalMatrix", sep="\t", header=T, row.names=1)
rownames(clin.data)<-gsub(rownames(clin.data), pattern="-", replace=".")
clin.data[1:3,]


# read in methylation data
meth.data<-read.table("PAAD_Methylation450", sep="\t", header=T, row.names=1)
dim(meth.data)

meth.data[1:3,]


# read in CNV data 

cnv.data <- read.table("TCGA.PAAD.CNV", sep="\t", header=T, row.names=1)


# read in mutation data 

mut.data <- read.table("PAAD.mutation.txt", sep= "\t", header = TRUE)


mut.data[,1] <- gsub(mut.data[,1], pattern="-", replace=".")



####################################################################################
######################## Survival analysis #########################################

#### Univariate analysis with RNA data 

# load survival package, look for associations with patient outcomes
library(survival)
os.time <- surv.data[colnames(rna.data),"OS.time"]
os.event <- as.numeric(surv.data[colnames(rna.data),"OS"])
paad.os <- Surv(os.time,os.event)




# fit a univariate model for each genes's expression, and find those most significantly associated to patient outcome

results.univariate<-array(NA, c(nrow(rna.data),4))
colnames(results.univariate)<-c("HR","LCI","UCI","PVAL")
rownames(results.univariate)<-rownames(rna.data)

results.univariate <-as.data.frame(results.univariate)

for(i in 1:nrow(rna.data))
{
 coxphmodel <- coxph(paad.os ~ as.numeric(rna.data[i,]))

 results.univariate$HR[i] <- summary(coxphmodel)$coef[1,2]
 results.univariate$LCI[i] <- summary(coxphmodel)$conf.int[1,3]
 results.univariate$UCI[i] <- summary(coxphmodel)$conf.int[1,4]
 results.univariate$PVAL[i] <- summary(coxphmodel)$coef[1,5]
}


results.univariate<-as.data.frame(results.univariate)# Calculate P-adjusted value (FDR) and re-order the data.frame by FDR value 

results.univariate$FDR<-p.adjust(results.univariate$PVAL,method="fdr")
results.univariate<-results.univariate[order(results.univariate$FDR, decreasing=F),]


# View the top 10 genes associated with overall survival 

results.univariate[1:10,]




#### Univariate analysis with clinical data  

clin.data<-clin.data[colnames(rna.data),]

# First find out which clinical data are associated with survival

# Potential factors: 

age <- as.numeric(clin.data$age_at_initial_pathologic_diagnosis)anatomic_subdivision <- as.factor(clin.data$anatomic_neoplasm_subdivision)

alcohol_history <- as.factor(clin.data$alcohol_history_documented)

family_history <- as.factor(clin.data$family_history_of_cancer)

diabetes <- as.factor(clin.data$history_of_diabetes)

gender <- as.factor(clin.data$gender)

chronic_pancreatitis <- as.factor(clin.data$history_of_chronic_pancreatitis)

histological_type <- as.factor(clin.data$histological_type)


smoking_history <- rep(NA,nrow(clin.data))
smoking_history[which(clin.data$tobacco_smoking_history == 1)] <- 0 
smoking_history[which(clin.data$tobacco_smoking_history > 1)] <- 1

pathologic_stage <- as.factor(clin.data$pathologic_stage)
table(pathologic_stage)
x3<- grep("Stage III",clin.data$pathologic_stage)
x4<- grep("Stage IV",clin.data$pathologic_stage)
stage.high<-rep(0,nrow(clin.data))
stage.high[c(x3,x4)]<-1

##Univariate analysis 

summary(coxph(paad.os ~ age))$coef
  
summary(coxph(paad.os ~ anatomic_subdivision))$coef  

summary(coxph(paad.os ~ alcohol_history))$coef

summary(coxph(paad.os ~ family_history))$coef

summary(coxph(paad.os ~ diabetes))$coef

summary(coxph(paad.os ~ gender))$coef

summary(coxph(paad.os ~ chronic_pancreatitis))$coef

summary(coxph(paad.os ~ stage.high))$coef

summary(coxph(paad.os ~ histological_type))$coef

summary(coxph(paad.os ~ smoking_history))$coef




# Filter out the factor which show significant association
Age 




#### Multivariate analysis 

results.multivariate<-array(NA, c(nrow(rna.data),4))
colnames(results.multivariate)<-c("HR","LCI","UCI","PVAL")
rownames(results.multivariate)<-rownames(rna.data)
results.multivariate<-as.data.frame(results.multivariate)


for(i in 1:nrow(rna.data))
{
 coxphmodel <- coxph(paad.os ~ rna.data[i,]+age)
 results.multivariate$HR[i] <- summary(coxphmodel)$coef[1,2]
 results.multivariate$LCI[i] <- summary(coxphmodel)$conf.int[1,3]
 results.multivariate$UCI[i] <- summary(coxphmodel)$conf.int[1,4]
 results.multivariate$PVAL[i] <- summary(coxphmodel)$coef[1,5]
}



results.multivariate<-as.data.frame(results.multivariate)


# Calculate P-adjusted value (FDR) and re-order the dataframe by FDR value 

results.multivariate$FDR<-p.adjust(results.multivariate$PVAL,method="fdr")
results.multivariate<-results.multivariate[order(results.multivariate$FDR, decreasing=F),]


# View the top 10 genes associated with overall survival 

results.multivariate[1:10,]

results.multivariate["SEC61A2",]

summary(rna.data["SEC61A2",])


# save workspace to resume later
save.image("PAAD_Survival.RData")


#################################################################################### 
######################## Methylation analysis ######################################

# loading annotation file of humanMethylation450
meth.annot<-readRDS("/data/seqtools/CancerInformaticsData/day6/annot450k.rds")


# load in the methylation data and align it with the RNA data and Survival data 
meth.data<-read.table("PAAD_Methylation450", sep="\t", header=T, row.names=1)

dim(meth.data)

rna.data2<-rna.data[,which(is.element(colnames(rna.data),colnames(meth.data)))] 

meth.data2<-meth.data[,which(is.element(colnames(meth.data),colnames(rna.data2)))]


# order the datasets by colnames(sample ID) 

rna.data2<-as.matrix(rna.data2[,order(colnames(rna.data2))])
meth.data2<-as.matrix(meth.data2[,order(colnames(meth.data2))])
surv.data <-as.data.frame(surv.data[order(rownames(surv.data)),])

# Remove NAs:  
meth.data2 <- na.omit(meth.data2)

# Find probes for target gene

SEC61A2_probes <- rownames(meth.annot[which(meth.annot$UCSC_RefGene_Name=="SEC61A2"),])

SEC61A2_probes

meth.annot[SEC61A2_probes,]

meth.data.SEC61A2 <- data.frame() 

meth.data.SEC61A2 <- meth.data2[which(is.element(rownames(meth.data2),SEC61A2_probes)),]

# Create results matrix and test the correlation between methyl probes and target gene expression 

results<-array(NA,c(nrow(meth.data.SEC61A2),4))

rownames(results)<-rownames(meth.data.SEC61A2)

colnames(results)<- c("Rho","PVAL","Mean.high","Mean.low")

SEC61A2.high2 <- as.numeric(as.numeric(rna.data2["SEC61A2",])>median(as.numeric(rna.data2["SEC61A2",])))

for (i in 1:nrow(meth.data.SEC61A2))
{
results[i,1]<-cor.test(as.numeric(rna.data2["SEC61A2",]),as.numeric(meth.data.SEC61A2[i,]), method = "spearman" )$est
results[i,2]<-cor.test(as.numeric(rna.data2["SEC61A2",]),as.numeric(meth.data.SEC61A2[i,]), method = "spearman")$p.value

}

results[,3]<-apply(meth.data.SEC61A2[,which(SEC61A2.high2==1)],1,mean,na.rm=T)

results[,4]<-apply(meth.data.SEC61A2[,which(SEC61A2.high2==0)],1,mean,na.rm=T)

results <- as.data.frame(results, colname = T)

results <-results[order(results$PVAL, decreasing=F),]

results



#Save workspace 
save.image("PAAD_methylation.RData")


#################################################################################### 
######################## Copy number variation analysis ############################

cnv.data <- read.table("TCGA.PAAD.CNV", sep="\t", header=T, row.names=1)

# Align the CNV dataset with RNA-seq dataset and sort them into same order
summary(cnv.data) 
cnv.data2 <- cnv.data[,which(is.element(colnames(cnv.data), colnames(rna.data2)))]
rna.data3 <- rna.data2[,which(is.element(colnames(rna.data2), colnames(cnv.data2)))]

dim(cnv.data2)
dim(rna.data3)


# correlation test between CNV and expression of SEC61A2 

cor.test(as.numeric(rna.data3["SEC61A2",]), as.numeric(cnv.data2["SEC61A2",]), method = "spearman")


# Count the number of Amp and Del events using thresholded CNV dataset 

wget https://tcga-xena-hub.s3.us-east-1.amazonaws.com/download/TCGA.PAAD.sampleMap%2FGistic2_CopyNumber_Gistic2_all_thresholded.by_genes.gz

mv TCGA.PAAD.sampleMap%2FGistic2_CopyNumber_Gistic2_all_thresholded.by_genes.gz TCGA.PAAD.CNV_thresholded.gz 

gunzip TCGA.PAAD.CNV_thresholded.gz 


cnv.data.thresholded <- read.table("TCGA.PAAD.CNV_thresholded", sep="\t", header=T, row.names=1)

# -2,-1,0,1,2: 2 copy del, 1 copy del, no change, amplification, high-amplification
# Using a cut-off value of 1 to calculate amplification and deletion events 

total <- length(cnv.data.thresholded)
gain <- apply(cnv.data.thresholded,MARGIN = 1, function(x)sum(x> = 1)) 
loss <- apply(cnv.data.thresholded,MARGIN = 1, function(x)sum(x< = -1))
neutral <- apply(cnv.data.thresholded, MARGIN = 1, function(x)sum(x= 0))

cnv.frame <- data.frame(ID=rownames(cnv.data.thresholded), AmpCount = gain, DelCount=loss, Neutral = neutral, Total = total)

dim(cnv.frame)

cnv.frame[which(cnv.frame$ID=="SEC61A2"),]


#Save workspace 
save.image("PAAD_CNV.RData")



#################################################################################### 
############################ Mutation  analysis ####################################

# Read the mutation data 

mut.data <- read.table("PAAD.mutation.txt", sep= "\t", header = TRUE)

mut.data[,1] <- gsub(mut.data[,1], pattern="-", replace=".")

SEC61A2.mut <- mut.data[which(mut.data$gene == "SEC61A2"),]

SEC61A2.mut 

#################################################################################### 
################################# Figure Plotting  #################################

#### Kaplan Meier plotting 

# candidate genes as prognostic markers: SEC61A2 

# stratify patients based on SEC61A2 expression, draw KM plot 

SEC61A2.high <- as.numeric(rna.data["SEC61A2",]>median(rna.data["SEC61A2",]))

png("PAAD_OS_bySEC61A2.png",width=6,height=6,units='in',res=300)
plot(survfit(paad.os ~ SEC61A2.high),col=c("black","red"),lwd=2,mark.time=TRUE, xlab="OS time (days)", ylab="Proportion survival rate", main="SEC61A2 in PAAD")
legend("topright",legend=c("SEC61A2-high","SEC61A2-low"),col=c("red","black"),lwd=2)text(4500,0.1,"HR=0.367 (95%CI 0.38-0.64) adj-p < 0.05")

dev.off()


#### Plotting the methylation vs expression

library(ggplot2)
library(cowplot)
library(tidyverse)

# filter the results of methylation analysis by P-value

sig_results <- results[which(results$PVAL.SEC61A2 < 0.05),] 

probe_list <- rownames(sig_results) 


# plot all methyl probes with significant p-value against SEC61A2 expression 

for (x in probe_list)
{
	name = paste(x,".png", se"s p = "")
	png(name, width=6,height=6,units='in',res=300)
	plot(as.numeric(meth.data2[x,]),as.numeric(rna.data2["SEC61A2",]), xlab= x , ylab="SEC61A2 RNAseq")
	abline(lm(rna.data2["SEC61A2",]~meth.data2[x,]))
	dev.off()
}


# Select the probe "cg01197091" to represent the associated relationship between methylation and SEC61A2 gene expression (pval = 0.002 ) 

SEC_rna <- rna.data2["SEC61A2",]
SEC_meth <- meth.data2["cg01197091",]

meth_df <- data.frame(SEC_rna, SEC_meth)
meth_df

RNAvsMeth <- ggplot(meth_df, aes(x=Methyl_probe, y=SEC61A2_RNAseq)) +  #color=SEC_high
  geom_point() + 
  geom_smooth(method = "lm", se= TRUE) +
  ggtitle("SEC61A2 gene expression vs Methylation") + 
  theme(plot.title = element_text(hjust = 0.5, face = "bold")) + 
  labs(x= "Methyl probe_cg01197091", y = "SEC61A2 RNAseq")

RNAvsMeth 

#### Plotting the CNV vs expression 

cnv_df <- data.frame(SEC61A2_CNV = cnv.data2["SEC61A2",], SEC61A2_RNA = rna.data3["SEC61A2",])

RNAvsCNV <- ggplot(cnv_df, aes(x= SEC61A2_CNV, y=SEC61A2_RNA)) +  #color=SEC_high
  geom_point() +  
  geom_smooth(method = "lm", se= TRUE) + 
  ggtitle("SEC61A2 gene expression vs CNV") + 
  theme(plot.title = element_text(hjust = 0.5, face = "bold")) + 
  labs(x= "Copy number variation(CNV)", y = "SEC61A2 RNAseq")

RNAvsCNV 


#### Combine the two plots together 

png("PAAD_SEC61A2_ExpVsMeth_CNV.png",width=12,height=6,units='in',res=300)

plot_grid(RNAvsMeth, RNAvsCNV, labels = "AUTO")

dev.off()





